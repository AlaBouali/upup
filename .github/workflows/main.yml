name: CI

on:
  pull_request:
    branches: [master]

jobs:
  Prettier-check:
    name: Prettier Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        id: cache-primes
        with:
          node-version-file: '.nvmrc'

      - name: Setup PNPM environment
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: |
          npm install -g pnpm@latest
          pnpm config set store-dir ~/.pnpm-store

      - name: Cache PNPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-v3-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-v3-

      - name: Install dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Prettier Check
        run: pnpm run prettier-check

  Test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [Prettier-check]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        id: cache-primes
        with:
          node-version-file: '.nvmrc'

      - name: Setup PNPM environment
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: |
          npm install -g pnpm@latest
          pnpm config set store-dir ~/.pnpm-store

      - name: Cache PNPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-v3-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-v3-

      - name: Install dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Run Tests
        run: pnpm run test:ci

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: true
          verbose: true

  Build:
    name: Build project
    runs-on: ubuntu-latest
    needs: [Prettier-check, Test]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        id: cache-primes
        with:
          node-version-file: '.nvmrc'

      - name: Setup PNPM environment
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: |
          npm install -g pnpm@latest
          pnpm config set store-dir ~/.pnpm-store

      - name: Cache PNPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-v3-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-v3-

      - name: Install dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

  Status-Check:
    name: Status Check
    runs-on: ubuntu-latest
    needs: [Prettier-check, Test, Build]
    if: always()
    steps:
      - name: Check status
        run: |
          if [ "${{ needs.Prettier-check.result }}" != "success" ] || \
             [ "${{ needs.Test.result }}" != "success" ] || \
             [ "${{ needs.Build.result }}" != "success" ]; then
            echo "One or more jobs failed"
            exit 1
          fi
          echo "All jobs passed successfully"